---
- name: Setup Core Applications and Configurations on Ubuntu
  hosts: localhost
  connection: local
  become: true

  vars:
    # Basic
    user_project_dir: "{{ original_user_home_dir }}/Projects"
    setup_repo_dir: "{{ user_project_dir }}/Utilities/Ubuntu/setup"
    bash_custom_config_path: ".bash_custom_config"
    
  pre_tasks:
    - name: Set fact for original user's home directory
      ansible.builtin.set_fact:
        original_user_home_dir: "{{ lookup('env', 'HOME') }}"
      delegate_to: localhost
      become: true
      become_user: saurabh-goyal

    - name: Set fact for original user's name
      ansible.builtin.set_fact:
        original_user_name: "{{ lookup('env', 'USER') }}"
      delegate_to: localhost
      become: true
      become_user: saurabh-goyal

    - name: Debug original user's home directory and name
      ansible.builtin.debug:
        msg: "Original user's home directory: {{ original_user_home_dir }}, Original user's name: {{ original_user_name }}"
  
  tasks:
    - name: Prerequisites
      tags:
        - prereq
      block:
      - name: Update apt cache
        ansible.builtin.apt:
          update_cache: yes
          cache_valid_time: 3600
        changed_when: false

      - name: Install common dependencies
        ansible.builtin.apt:
          name:
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
            - gnupg
          state: present

      - name: Install libfuse2 for AppImage support
        ansible.builtin.apt:
          name: libfuse2t64
          state: present

      - name: Install Node.js and npm
        ansible.builtin.apt:
          name:
            - nodejs
            - npm # Explicitly install npm
          state: latest

      - name: Ensure keyring directory
        ansible.builtin.file:
          path: /etc/opt/keyrings
          state: directory
          mode: '0755'

    - name: Local Environment
      tags:
        - local_env
      block:
      - name: Copy .bash* files to user's home directory
        ansible.builtin.copy:
          src: "{{ setup_repo_dir }}/{{ bash_custom_config_path }}"
          dest: "{{ original_user_home_dir }}/"
          owner: "{{ original_user_name }}"
          group: "{{ original_user_name }}"
          mode: '0644'
        become: true
        become_user: saurabh-goyal

      - name: Add sourcing line to .bashrc if not present
        ansible.builtin.lineinfile:
          path: "{{ original_user_home_dir }}/.bashrc"
          line: "source {{ original_user_home_dir }}/{{ bash_custom_config_path }}" # Assuming one of your copied files is this
          create: yes
          owner: "{{ original_user_name }}"
          group: "{{ original_user_name }}"
          mode: '0644'
        become: true
        become_user: saurabh-goyal

    - name: Apps
      tags:
        - apps
      block:
        - name: Install VLC
          ansible.builtin.apt:
            name: vlc
            state: latest

        - name: Install Chrome
          tags:
            - chrome
          block:
            - name: Fetch chrome signing key
              ansible.builtin.get_url:
                url: https://dl.google.com/linux/linux_signing_key.pub
                dest: /etc/opt/keyrings/google-chrome.asc
                mode: '0644'

            - name: Add chrome repository
              ansible.builtin.apt_repository:
                repo: "deb [arch=amd64 signed-by=/etc/opt/keyrings/google-chrome.asc] https://dl.google.com/linux/chrome/deb stable main"
                state: present
                filename: google-chrome
                update_cache: true

            - name: Install chrome
              ansible.builtin.apt:
                name: google-chrome-stable
                state: present

        - name: Install Copyq
          tags:
            - copyq
          block:
            - name: Add copyq repository
              ansible.builtin.apt_repository:
                repo: "ppa:hluk/copyq"
                state: present
                update_cache: true

            - name: Install copyq
              ansible.builtin.apt:
                name: copyq
                state: present

        - name: Install Docker
          tags:
            - docker
          block:
            - name: Fetch docker signing key
              ansible.builtin.get_url:
                url: https://download.docker.com/linux/ubuntu/gpg
                dest: /etc/opt/keyrings/docker.asc
                mode: '0644'

            - name: Add docker repository
              ansible.builtin.apt_repository:
                repo: "deb [arch=amd64 signed-by=/etc/opt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
                state: present
                update_cache: true

            - name: Install docker
              ansible.builtin.apt:
                name:
                  - docker-ce
                  - docker-ce-cli
                  - containerd.io
                  - docker-buildx-plugin
                  - docker-compose-plugin
                state: present

        - name: Install Postman
          tags:
            - postman
          block:
            - name: Install postman from snap
              community.general.snap:
                name: postman
                state: present

        - name: Install Cursor
          tags:
            - cursor
          block:
            - name: Download Cursor AppImage
              ansible.builtin.get_url:
                url: "https://www.cursor.com/download/stable/linux-x64"
                dest: "/opt/Cursor.AppImage"
                mode: '0755'

            - name: Create extraction directory for Cursor
              ansible.builtin.file:
                path: "/opt/cursor-extracted"
                state: directory
                mode: '0755'

            - name: Extract Cursor AppImage
              ansible.builtin.command: "/opt/Cursor.AppImage --appimage-extract"
              args:
                chdir: "/opt/cursor-extracted" # Extract into this directory
                creates: "/opt/cursor-extracted/squashfs-root" # Idempotent check
              register: cursor_extract_result

            - name: Fix chrome-sandbox permissions
              ansible.builtin.file:
                path: "/opt/cursor-extracted/squashfs-root/usr/share/cursor/chrome-sandbox"
                owner: root
                group: root
                mode: '4755' # Set SUID bit and permissions
                state: file # Ensure it's treated as a file
              when: cursor_extract_result.changed # Only run if extraction happened

            - name: Copy Cursor icon from playbook directory
              ansible.builtin.copy:
                src: "{{ playbook_dir }}/cursor.png" # Assumes cursor.png is in the same directory as the playbook
                dest: "/opt/cursor-icon.png"
                mode: '0644'

            - name: Create Cursor desktop entry
              ansible.builtin.copy:
                content: |
                  [Desktop Entry]
                  Name=Cursor
                  Exec=/opt/cursor-extracted/squashfs-root/AppRun %U
                  Terminal=false
                  Type=Application
                  Icon=/opt/cursor-icon.png
                  Categories=Development;IDE;
                  StartupWMClass=Cursor
                dest: "/usr/share/applications/cursor.desktop"
                mode: '0644'

