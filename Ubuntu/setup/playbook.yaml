---
- name: Setup Core Applications and Configurations on Ubuntu
  hosts: localhost
  connection: local
  become: true
  become_user: saurabh-goyal
  
  vars:
    # Basic
    user_project_dir: "{{ original_user_home_dir }}/Projects"
    setup_repo_dir: "{{ user_project_dir }}/Utilities/Ubuntu/setup"
    bash_custom_config_path: ".bash_custom_config"
    
  pre_tasks:
    - name: Set fact for original user's home directory
      ansible.builtin.set_fact:
        original_user_home_dir: "{{ lookup('env', 'HOME') }}"
      delegate_to: localhost # Ensure this runs on the control node before becoming root

    - name: Set fact for original user's name
      ansible.builtin.set_fact:
        original_user_name: "{{ lookup('env', 'USER') }}"
      delegate_to: localhost # Ensure this runs on the control node before becoming root

    - name: Debug original user's home directory and name
      ansible.builtin.debug:
        msg: "Original user's home directory: {{ original_user_home_dir }}, Original user's name: {{ original_user_name }}"
  
  tasks:
    - name: Prerequisites
      tags:
        - prereq
      block:
      - name: Update apt cache
        ansible.builtin.apt:
          update_cache: yes
          cache_valid_time: 3600
        changed_when: false
        become: true
        become_user: root

      - name: Install common dependencies
        ansible.builtin.apt:
          name:
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
            - gnupg
          state: present
        become: true
        become_user: root

      - name: Install libfuse2 for AppImage support
        ansible.builtin.apt:
          name: libfuse2t64
          state: present
        become: true
        become_user: root

      - name: Install Node.js and npm
        ansible.builtin.apt:
          name:
            - nodejs
            - npm # Explicitly install npm
          state: latest
        become: true
        become_user: root

      - name: Ensure keyring directory
        ansible.builtin.file:
          path: /etc/opt/keyrings
          state: directory
          mode: '0755'
        become: true
        become_user: root

    - name: Local Environment
      tags:
        - local_env
      block:
      - name: Copy .bash* files to user's home directory
        ansible.builtin.copy:
          src: "{{ setup_repo_dir }}/{{ bash_custom_config_path }}"
          dest: "{{ original_user_home_dir }}/"
          owner: "{{ original_user_name }}"
          group: "{{ original_user_name }}"
          mode: '0644'

      - name: Add sourcing line to .bashrc if not present
        ansible.builtin.lineinfile:
          path: "{{ original_user_home_dir }}/.bashrc"
          line: "source {{ original_user_home_dir }}/{{ bash_custom_config_path }}" # Assuming one of your copied files is this
          create: yes
          owner: "{{ original_user_name }}"
          group: "{{ original_user_name }}"
          mode: '0644'

    - name: Apps
      tags:
        - apps
      block:
        - name: Install VLC
          ansible.builtin.apt:
            name: vlc
            state: latest
          become: true
          become_user: root

        - name: Install Chrome
          tags:
            - chrome
          block:
            - name: Fetch chrome signing key
              ansible.builtin.get_url:
                url: https://dl.google.com/linux/linux_signing_key.pub
                dest: /etc/opt/keyrings/google-chrome.asc
                mode: '0644'
              become: true
              become_user: root

            - name: Add chrome repository
              ansible.builtin.apt_repository:
                repo: "deb [arch=amd64 signed-by=/etc/opt/keyrings/google-chrome.asc] https://dl.google.com/linux/chrome/deb stable main"
                state: present
                filename: google-chrome
                update_cache: true
              become: true
              become_user: root

            - name: Install chrome
              ansible.builtin.apt:
                name: google-chrome-stable
                state: present
              become: true
              become_user: root

        - name: Install Copyq
          tags:
            - copyq
          block:
            - name: Add copyq repository
              ansible.builtin.apt_repository:
                repo: "ppa:hluk/copyq"
                state: present
                update_cache: true
              become: true
              become_user: root

            - name: Install copyq
              ansible.builtin.apt:
                name: copyq
                state: present
              become: true
              become_user: root

        - name: Install Docker
          tags:
            - docker
          block:
            - name: Fetch docker signing key
              ansible.builtin.get_url:
                url: https://download.docker.com/linux/ubuntu/gpg
                dest: /etc/opt/keyrings/docker.asc
                mode: '0644'
              become: true
              become_user: root

            - name: Add docker repository
              ansible.builtin.apt_repository:
                repo: "deb [arch=amd64 signed-by=/etc/opt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
                state: present
                update_cache: true
              become: true
              become_user: root

            - name: Install docker
              ansible.builtin.apt:
                name:
                  - docker-ce
                  - docker-ce-cli
                  - containerd.io
                  - docker-buildx-plugin
                  - docker-compose-plugin
                state: present
              become: true
              become_user: root

        - name: Install Postman
          tags:
            - postman
          block:
            - name: Install postman from snap
              community.general.snap:
                name: postman
                state: present
              become: true
              become_user: root

